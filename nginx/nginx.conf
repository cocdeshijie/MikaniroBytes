worker_processes  1;
events { worker_connections  1024; }

http {
    # MIME types
    include       mime.types;
    default_type  application/octet-stream;

    # Tuning
    sendfile           on;
    keepalive_timeout  360;
    client_max_body_size 0;  # Allow large file uploads

    # Backend & frontend upstreams
    upstream backend  { server backend:8000; }
    upstream frontend { server frontend:3000; }

    server {
        listen 80 default_server;
        server_name _;

        # Common proxy headers
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Backend API endpoints - MUST BE POST/PUT/DELETE methods
        location = /auth/login {
            if ($request_method ~ ^(POST|OPTIONS)$ ) {
                proxy_pass http://backend;
            }
            if ($request_method !~ ^(POST|OPTIONS)$ ) {
                proxy_pass http://frontend;
            }
        }

        location = /auth/register {
            if ($request_method ~ ^(POST|OPTIONS)$ ) {
                proxy_pass http://backend;
            }
            if ($request_method !~ ^(POST|OPTIONS)$ ) {
                proxy_pass http://frontend;
            }
        }

        # Backend API endpoints (these don't conflict with frontend pages)
        location = /auth/logout { proxy_pass http://backend; }
        location = /auth/registration-enabled { proxy_pass http://backend; }
        location = /auth/change-password { proxy_pass http://backend; }
        location = /auth/logout-all { proxy_pass http://backend; }
        location = /auth/sessions { proxy_pass http://backend; }
        location = /auth/check-session { proxy_pass http://backend; }
        location = /auth/me { proxy_pass http://backend; }

        # API routes with paths that need prefix matching
        location ~ ^/auth/sessions/\d+ { proxy_pass http://backend; }
        location ~ ^/files/(upload|bulk-upload|batch-download|batch-delete|my-files)$ { proxy_pass http://backend; }
        location ~ ^/files/download/\d+ { proxy_pass http://backend; }
        location ~ ^/files/bulk-result/ { proxy_pass http://backend; }
        location ~ ^/admin/ { proxy_pass http://backend; }

        # Other backend routes
        location ~ ^/(uploads|previews|docs|redoc|ping|openapi\.json)(/|$) {
            proxy_pass http://backend;
        }

        # Next.js static files
        location /_next/static/ {
            proxy_pass http://frontend;
            proxy_cache_valid 60m;
            add_header Cache-Control "public, max-age=3600";
        }

        # Next.js assets & SSR routes
        location /_next/ {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location /favicon.ico {
            proxy_pass http://frontend;
        }

        # Everything else: try frontend
        location / {
            proxy_pass http://frontend;
        }

        # Optional: serve uploaded files straight from disk for max speed
        # This matches paths like /2025/04/filename.ext
        location ~ \.[^/]+$ {
            alias /uploads$uri;
            access_log off;
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
            try_files $uri @backend;
        }

        location @backend {
            proxy_pass http://backend;
        }
    }
}